{"version":3,"sources":["components/square.jsx","components/board.jsx","components/toggle-sort.jsx","components/move-list-item.jsx","components/move-list.jsx","components/toggle-move-list.jsx","index.jsx"],"names":["Square","_this$props","this","props","isWinner","onClick","value","i","clasname","react_default","a","createElement","className","type","React","PureComponent","defaultProps","Board","renderSquare","_this","squares","winnerSquares","components_square","key","concat","includes","board","row","col","push","Component","ToggleSort","id","htmlFor","data-tg-off","data-tg-on","MoveListItems","move","desc","resultDesc","isBold","MoveList","history","stepNumber","map","step","currMove","Math","floor","move_list_item","Object","assign","ToggleMoveList","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleToggle","isMoveSortDesc","state","setState","components_toggle_sort","components_move_list","getWinnerAndwinSquares","winLine","find","line","_line","slicedToArray","b","c","winner","winSquares","Game","nextPlayer","isNextTurnPlayerX","handleBoardClick","_this$state","historyToStep","slice","winnerAndwinSquares","length","handleMoveListClick","_this$state2","Array","fill","status","_this$state3","current","isDraw","src_components_board","toggle_move_list","ReactDOM","render","src_Game","document","getElementById"],"mappings":"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","file":"static/js/main.a9ac9e63.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './square.scss';\r\n\r\nclass Square extends React.PureComponent {\r\n  render() {\r\n    const {\r\n      isWinner, onClick, value, i,\r\n    } = this.props;\r\n    const clasname = isWinner ? 'square square-winner' : 'square';\r\n    return (\r\n      <button className={clasname} onClick={() => onClick(i)} type=\"button\">\r\n        {value}\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nSquare.propTypes = {\r\n  isWinner: PropTypes.bool.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n  value: PropTypes.string,\r\n  i: PropTypes.number.isRequired,\r\n};\r\n\r\nSquare.defaultProps = {\r\n  value: '',\r\n};\r\n\r\nexport default Square;\r\n","/* eslint-disable jsx-a11y/label-has-for */\r\n/* eslint-disable jsx-a11y/label-has-associated-control */\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Square from './square';\r\nimport './board.scss';\r\n\r\nclass Board extends React.Component {\r\n  renderSquare = (i) => {\r\n    const { squares, winnerSquares, onClick } = this.props;\r\n    return (\r\n      <Square\r\n        key={`square${i}`}\r\n        value={squares[i]}\r\n        isWinner={winnerSquares.includes(i)}\r\n        i={i}\r\n        onClick={onClick}\r\n      />\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const cols = 3;\r\n    const rows = 3;\r\n    const board = [];\r\n    for (let row = 0; row <= rows; row += 1) {\r\n      for (let col = 0; col <= cols; col += 1) {\r\n        if (row === 0 && col === 0) {\r\n          board.push(<label key=\"row\\col\" className=\"board-category\">row\\col</label>);\r\n        } else if (row === 0) {\r\n          board.push(<label key={`col${col}`} className=\"board-col-title\">{col}</label>);\r\n        } else if (col === 0) {\r\n          board.push(<label key={`row${row}`} className=\"board-row-title\">{row}</label>);\r\n        } else {\r\n          board.push(this.renderSquare((row - 1) * 3 + col - 1));\r\n        }\r\n      }\r\n    }\r\n    return (\r\n      <div className=\"board\">{board}</div>\r\n    );\r\n  }\r\n}\r\n\r\nBoard.propTypes = {\r\n  squares: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  winnerSquares: PropTypes.arrayOf(PropTypes.number).isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Board;\r\n","/* eslint-disable jsx-a11y/label-has-associated-control */\r\n/* eslint-disable jsx-a11y/label-has-for */\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './toggle-sort.scss';\r\n\r\nclass ToggleSort extends React.PureComponent {\r\n  render() {\r\n    const { onClick } = this.props;\r\n    return (\r\n      <div>\r\n        <input id=\"tgBtn\" className=\"tgl tgl-skewed\" type=\"checkbox\" onClick={onClick} />\r\n        <label htmlFor=\"tgBtn\" className=\"tgl-btn\" data-tg-off=\"Ascending\" data-tg-on=\"Descending\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nToggleSort.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ToggleSort;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './move-list.scss';\r\n\r\nclass MoveListItems extends React.PureComponent {\r\n  render() {\r\n    const {\r\n      onClick, move, desc, isBold,\r\n    } = this.props;\r\n    const resultDesc = isBold ? <b>{desc}</b> : desc;\r\n    return (\r\n      <li className=\"move-list-item\">\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => onClick(move)}\r\n        >\r\n          {resultDesc}\r\n        </button>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nMoveListItems.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n  move: PropTypes.number.isRequired,\r\n  desc: PropTypes.string.isRequired,\r\n  isBold: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default MoveListItems;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport MoveListItems from './move-list-item';\r\nimport './move-list.scss';\r\n\r\nclass MoveList extends React.Component {\r\n  render() {\r\n    const { history, stepNumber, onClick } = this.props;\r\n    const moves = history.map((step, move) => {\r\n      let desc;\r\n      if (move) {\r\n        desc = `Go to move # ${move}, `\r\n          + `${step.squares[step.currMove]} at `\r\n          + `(col, row) = (${(step.currMove % 3) + 1}, ${Math.floor(step.currMove / 3) + 1})`;\r\n      } else {\r\n        desc = 'Go to game start';\r\n      }\r\n      return (\r\n        <MoveListItems\r\n          key={step.currMove}\r\n          {...{\r\n            onClick, move, desc,\r\n          }}\r\n          isBold={move === stepNumber}\r\n        />\r\n      );\r\n    });\r\n    return moves;\r\n  }\r\n}\r\n\r\nMoveList.propTypes = {\r\n  history: PropTypes.arrayOf(PropTypes.shape({ squares: PropTypes.array })).isRequired,\r\n  stepNumber: PropTypes.number.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default MoveList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ToggleSort from './toggle-sort';\r\nimport MoveList from './move-list';\r\nimport './move-list.scss';\r\n\r\nclass ToggleMoveList extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isMoveSortDesc: false,\r\n    };\r\n  }\r\n\r\n  handleToggle = () => {\r\n    const { isMoveSortDesc } = this.state;\r\n    this.setState({ isMoveSortDesc: !isMoveSortDesc });\r\n  }\r\n\r\n  render() {\r\n    const { isMoveSortDesc } = this.state;\r\n    const { history, stepNumber, onClick } = this.props;\r\n    const className = isMoveSortDesc ? 'move-list move-list-reverse' : 'move-list';\r\n\r\n    return (\r\n      <div>\r\n        <ToggleSort onClick={this.handleToggle} />\r\n        <ol className={className}>\r\n          <MoveList {...{ history, stepNumber, onClick }} />\r\n        </ol>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nToggleMoveList.propTypes = {\r\n  history: PropTypes.arrayOf(PropTypes.shape({ squares: PropTypes.array })).isRequired,\r\n  stepNumber: PropTypes.number.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ToggleMoveList;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Board from './components/board';\r\nimport ToggleMoveList from './components/toggle-move-list';\r\nimport './index.css';\r\n\r\nfunction getWinnerAndwinSquares(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n  const winLine = lines.find((line) => {\r\n    const [a, b, c] = line;\r\n    return (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]);\r\n  });\r\n  return {\r\n    winner: winLine ? squares[winLine[0]] : null,\r\n    winSquares: winLine || [],\r\n  };\r\n}\r\n\r\nclass Game extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      history: [{\r\n        squares: Array(9).fill(null),\r\n        currMove: -1,\r\n      }],\r\n      stepNumber: 0,\r\n      isNextTurnPlayerX: true,\r\n      winner: null,\r\n      winnerSquares: [],\r\n    };\r\n  }\r\n\r\n  nextPlayer = () => {\r\n    const { isNextTurnPlayerX } = this.state;\r\n    return isNextTurnPlayerX ? 'X' : 'O';\r\n  }\r\n\r\n  handleBoardClick = (i) => {\r\n    const {\r\n      stepNumber, history, winner, isNextTurnPlayerX,\r\n    } = this.state;\r\n    const historyToStep = history.slice(0, stepNumber + 1);\r\n    const squares = historyToStep[stepNumber].squares.slice();\r\n    if (winner || squares[i]) {\r\n      return;\r\n    }\r\n    squares[i] = this.nextPlayer();\r\n    const winnerAndwinSquares = getWinnerAndwinSquares(squares);\r\n    this.setState({\r\n      history: historyToStep.concat([{\r\n        squares,\r\n        currMove: i,\r\n      }]),\r\n      stepNumber: historyToStep.length,\r\n      isNextTurnPlayerX: !isNextTurnPlayerX,\r\n      winner: winnerAndwinSquares.winner,\r\n      winnerSquares: winnerAndwinSquares.winSquares,\r\n    });\r\n  }\r\n\r\n  handleMoveListClick = (step) => {\r\n    const { stepNumber, history } = this.state;\r\n    if (stepNumber === step) return;\r\n    const winnerAndwinSquares = getWinnerAndwinSquares(history[step].squares);\r\n    this.setState({\r\n      stepNumber: step,\r\n      isNextTurnPlayerX: (step % 2) === 0,\r\n      winner: winnerAndwinSquares.winner,\r\n      winnerSquares: winnerAndwinSquares.winSquares,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      history, stepNumber, winner, winnerSquares,\r\n    } = this.state;\r\n    const current = history[stepNumber];\r\n    const isDraw = !current.squares.includes(null);\r\n\r\n    let status;\r\n    if (winner) {\r\n      status = `Winner: ${winner}`;\r\n    } else if (isDraw) {\r\n      status = 'Draw';\r\n    } else {\r\n      status = `Next player: ${this.nextPlayer()}`;\r\n    }\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          <Board\r\n            squares={current.squares}\r\n            winnerSquares={winnerSquares}\r\n            onClick={this.handleBoardClick}\r\n          />\r\n        </div>\r\n        <div className=\"game-info\">\r\n          <div className=\"status\">{status}</div>\r\n          <ToggleMoveList {...{ history, stepNumber }} onClick={this.handleMoveListClick} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nReactDOM.render(\r\n  <Game />,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}